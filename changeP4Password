import hudson.model.*
import hudson.maven.*
import hudson.tasks.*
import hudson.scm.*
import hudson.perforce.*
import org.jenkinsci.plugins.workflow.*

updatePerforcePassword(Hudson.instance.items);

def updatePerforcePassword(items) {
	int totalJobCount = 0;
	int folderCount = 0;

	for(item in items) {
		if(item instanceof com.cloudbees.hudson.plugins.folder.Folder) {
			folderCount++;
			// println(folderCount + "\t" + item.class + "\t" + item.name);
			updatePerforcePassword(((com.cloudbees.hudson.plugins.folder.Folder) item).getItems());
		} else {
			if ( item instanceof  org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject) continue;

			if (item.scm instanceof hudson.plugins.perforce.PerforceSCM && item.scm.p4User == "itautomation") {
				totalJobCount++;
				// I used this to find the related jobs to folders because the loop count will be smaller in these instances
				// println("a" + totalJobCount++ + "\t" + item.class + "\t" + item.name);
				// printJobInfo(item);
				// uncomment to update the Perforce password property
				// item.scm.setP4Passwd("");
				// printJobInfo(item);
				// uncomment to save the update
				// item.save();
			}
		}
	}

	println("Total jobs in this run: " + totalJobCount);
}

def printJobInfo(item) {
	println(item.name + "\tP4 Port : " + item.scm.getP4Port() + "\tDecrypted password: " + item.scm.getDecryptedP4Passwd());
}
